#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#----------------------------d r u t e s . c o n f / g l o b a l . c o n f -----------------------
#
#
#
###------- begin model type -------#####
# available options
# RE = Richards equation, primary solution is total hydraulic head H, matrix is symmetric
#
# REstd = Richards equation, primary solution is pressure head h, use for homogeneous porous media only, and for EXPERIMENTAL purposes ONLY! , otherwise set RE
#
# boussi = Boussinesq equation for sloping land (1877) ,
#
# ADE = advection dispersion reaction equation (transport of solutes) 
#
# Re_dual = Richards equation dual porosity with total hydraulic head (added J 13/6/16)
#
# heat - heat conduction equation (Sophocleous, 1979)

ADE

###------- end model type -------#####


###------- begin initial mesh configuration -------#####

#problem dimension (1D, 2D, 3D) [integer]
#1 = 1D (drutes.conf/mesh.conf/drumesh1d.conf)
#2 = 2D
#2r = two-dimensional domain for rotational symmetric flow 
#3 = 3D
# recently only 1D and 2D is implemented
1

# define mesh generator
# 1 - internal mesh generator (edit drutes.conf/mesh.conf/drumesh2d.conf)
# 2 - t3d mesh generator (provide drutes.conf/mesh.conf/mesh.t3d)
# 3 - gmsh mesh generator (provide drutes.conf/mesh.conf/mesh.msh)
#(if you need different mesh formats contact developers)
1

###------- end initial mesh configuration -------#####


###------- begin error criteria (nonlinear solver) -------#####

# maximum number of iteration of the Picard method [integer]
20

# h tolerance: iteration criterion for the Picard method
1e3

###------- end error criteria (nonlinear solver) -------#####


###-----begin time information------#####

#time units (write what ever you like, will be displayed on your plots) (up to 5 characters)
hrs

#-----initial dt hod - init dt [real]
1e-4

#-----end time [real]
1e-3

#---minimum time step [real]
1e-12

#-- maximum time step [real]
0.05

###-----end time information ------


###------begin observation time settings------######

# observation time method
# 1 - adjust time step to observation times
# 2 - interpolate solution between the time steps (recommended)
2

# set format of the observation files (takes effect in 2D only)
# scil -- for scilab files
# pure -- raw data - just nodes IDs and FEM coefficients
# gmsh -- gmsh postprocessing
scil

##make sequence of observation time [y/n]
n

##if [y] then define number of frames, if [n] comment it out
#1000

#number of observation times
0

#observation time values [real]


###-----end observation time settings------########


###------begin observation point settings------######

#observation points
#number of observation points [integer]
#
3
#observation points coordinates
12.0
7.5
3.0

#define points with measured data
0
# point coordinates
#  12.0

###------end observation point settings------######


###------begin terminal output print settings --------

#print level [integer]
# 0 = standard output
# 1 = screen goes to out/screen.log
# -1 = screen goes to /dev/null, not suitable for windows
0

###-----end terminal output print settings ------######


###-----begin advanced settings ------####

#nonlinear iteration method
#0 - standard Picard method
#1 - Schwarz-Picard method (dd-adaptivity)
#2 - subcycling
0

#time integration method
# 0 - steady state problem
# 1 - unsteady problem with lumped (diagonal) capacity matrix (recommended)
# 2 - unsteady problem with consistent capacity matrix
1

#do inverse modeling? [y/n] if yes, put your setup into drutes.conf/inverse_modeling/objfnc.conf
y

#run from backup
n
# "drutes.conf/matsrv/RE_matrix_press_head-100.sci"
#/home/miguel/skola/infiltr/drutemp/out/RE_matrix_press_head-1.sci


#integration method - degree of Gauss quadrature formulae
#10 - 1 point formula,
#20 - 2 point formula
#30 - 3 point formula
#40 - 4 point formula
#50 - 5 point formula
#60 - 6 point formula
#70 - 7 point formula
#90 - 9 point formula (in 2-dimensions derived from 3 point formula, ask Michal Kuraz :) )
#120 - 12 point formula
30

###-----end advanced settings ------####
