#plot(x=NULL)
z_pt=log10(1400)
x1=-21.98
x2=11.55
searchspace=log10(data29)
div=1
zrange=range(searchspace/div)-c(2,0)
#png("comp.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f10",cex.axis=3.1,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-2,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text="log10 f(x)"
mtext(ax.text,side=2,cex=1.7,line=1)
#leg.text="f10"
#legend("topright",leg.text)
dev.off()
### all together in one giant png
# first with comp
z_pt=-1400
x1=-21.98
x2=11.55
searchspace=data1
div=1000
zrange=range(searchspace/div)-c(5,0)
dev.new()
png("all_ells.png",width=2500,height=1000,units = 'px')
par(mfrow=c(2,5),mar=c(4.5,4,3.4,2),mgp=c(3,2,0))#mpg=c(3,1.2,0)
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f1",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta= 120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
#dev.off()
#optimum
z_pt=-1300
x1=-21.98
x2=11.55
searchspace=data2
div=10^10
zrange=range(searchspace/div)-c(1,-0.5)
#png("ellipt.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f2",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-1,col="red",theta= 120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"10"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-900
x1=-21.98
x2=11.55
searchspace=data6
div=10^3
zrange=range(searchspace/div)-c(5,-2)
#png("rot_ros.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f3",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-700
x1=-21.98
x2=11.55
searchspace=data8
div=1
zrange=range(searchspace/div)-c(5,0)
#png("rot_ack.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f4",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
z_pt=-600
x1=-21.98
x2=11.55
searchspace=data9
div=1
zrange=range(searchspace/div)-c(5,0)
#png("rot_weier.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f5",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"2"))
#mtext(ax.text,side=2,cex=1.9)
z_pt=-500
x1=-21.98
x2=11.55
searchspace=data10
div=10^3
zrange=range(searchspace/div)-c(5,0)
#png("rot_griew.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f6",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-400
x1=-21.98
x2=11.55
searchspace=data11
div=1
zrange=range(searchspace/div)-c(150,0)
#png("rastrigin.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f7",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-150,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
#mtext(ax.text,side=2,cex=1.9)
z_pt=-300
x1=-21.98
x2=11.55
searchspace=data12
div=10^3
zrange=range(searchspace/div)-c(2,-1)
#png("rot_rastrigin.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f8",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-2,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-100
x1=-21.98
x2=11.55
searchspace=data14
div=10^2
zrange=range(searchspace/div)-c(5,0)
#png("schwefel.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f9",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"2"))
mtext(ax.text,side=2,cex=1.7,line=0)
#plot(x=NULL)
z_pt=log10(1400)
x1=-21.98
x2=11.55
searchspace=log10(data29)
div=1
zrange=range(searchspace/div)-c(2,0)
#png("comp.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f10",cex.axis=2.8,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-2,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text="log10 f(x)"
mtext(ax.text,side=2,cex=1.7,line=1)
#leg.text="f10"
#legend("topright",leg.text)
dev.off()
### all together in one giant png
# first with comp
z_pt=-1400
x1=-21.98
x2=11.55
searchspace=data1
div=1000
zrange=range(searchspace/div)-c(5,0)
dev.new()
png("all_ells.png",width=2500,height=1000,units = 'px')
par(mfrow=c(2,5),mar=c(4.5,4,3.4,2),mgp=c(3,2,0))#mpg=c(3,1.2,0)
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f1",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta= 120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
#dev.off()
#optimum
z_pt=-1300
x1=-21.98
x2=11.55
searchspace=data2
div=10^10
zrange=range(searchspace/div)-c(1,-0.5)
#png("ellipt.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f2",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-1,col="red",theta= 120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"10"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-900
x1=-21.98
x2=11.55
searchspace=data6
div=10^3
zrange=range(searchspace/div)-c(5,-2)
#png("rot_ros.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f3",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-700
x1=-21.98
x2=11.55
searchspace=data8
div=1
zrange=range(searchspace/div)-c(5,0)
#png("rot_ack.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f4",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
z_pt=-600
x1=-21.98
x2=11.55
searchspace=data9
div=1
zrange=range(searchspace/div)-c(5,0)
#png("rot_weier.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta= 120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f5",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"2"))
#mtext(ax.text,side=2,cex=1.9)
z_pt=-500
x1=-21.98
x2=11.55
searchspace=data10
div=10^3
zrange=range(searchspace/div)-c(5,0)
#png("rot_griew.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f6",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-400
x1=-21.98
x2=11.55
searchspace=data11
div=1
zrange=range(searchspace/div)-c(150,0)
#png("rastrigin.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f7",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-150,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
#mtext(ax.text,side=2,cex=1.9)
z_pt=-300
x1=-21.98
x2=11.55
searchspace=data12
div=10^3
zrange=range(searchspace/div)-c(2,-1)
#png("rot_rastrigin.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f8",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-2,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"3"))
mtext(ax.text,side=2,cex=1.7,line=0)
z_pt=-100
x1=-21.98
x2=11.55
searchspace=data14
div=10^2
zrange=range(searchspace/div)-c(5,0)
#png("schwefel.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f9",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-5,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text=expression(paste("x 10"^"2"))
mtext(ax.text,side=2,cex=1.7,line=0)
#plot(x=NULL)
z_pt=log10(1400)
x1=-21.98
x2=11.55
searchspace=log10(data29)
div=1
zrange=range(searchspace/div)-c(2,0)
#png("comp.png",width=1000,height=1000,unit="px")
ribbon3D(x=z[,1],y=z[,2],z=searchspace/div,xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,zlab="", xlab="",ylab="",alpha=0.9,theta=120,phi=15,ticktype="detailed",contour=list(nlevels=20,col=jet.col(20)),colkey=F,main="f10",cex.axis=2.5,cex.main=4)
points3D(x=x1,y=x2,z=z_pt/div-2,col="red",theta=120,phi=15,ticktype="simple",xlim=c(-100,100),ylim=c(-100,100),zlim=zrange,add=TRUE,pch=13,cex=4,lwd=4)
ax.text="log10 f(x)"
mtext(ax.text,side=2,cex=1.7,line=1)
#leg.text="f10"
#legend("topright",leg.text)
dev.off()
t=seq(0.01,14,0.01)
t=seq(0.01,14,0.01)
heat=sin(t)
plot(t,heat)
plot(t,200*heat)
plot(t,200*heat*rnorm(t))
plot(t,200*heat)
rnorm(0,0.01,length(t))*1
?rnorm
rnorm(length(t),1,0.01)
plot(t,200*heat*rnorm(length(t),1,0.01))
plot(t,200*heat*rnorm(length(t),1,0.01),type="l")
plot(t,200*heat*rnorm(length(t),1,0.1),type="l")
heat=sin(t*pi)
heat_new=200*heat*rnorm(length(t),1,0.1)
plot(t,heat_new,type="l")
t=seq(0.01,14,0.01)
heat=sin(t*pi*2)
heat_new=200*heat*rnorm(length(t),1,0.1)
plot(t,heat_new,type="l")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=200*heat*rnorm(length(t),1,0.1)
plot(t,heat_new,type="l")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=200*heat*rnorm(length(t),1,0.2)
plot(t,heat_new,type="l")
?write.table
write.table(cbind(t,heat_new),file="102.bc")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=300*heat*rnorm(length(t),1,0.2)
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=600*heat*rnorm(length(t),1,0.2)
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
heat_new=600*heat*rnorm(length(t),1,0.2)+100
plot(t,heat_new,type="l")
heat_new=600*heat*rnorm(length(t),1,0.2)+30
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=0.08*heat*rnorm(length(t),1,0.2)+30
plot(t,heat_new,type="l")
t=seq(0.01,14,0.01)
heat=cos(t*pi*2)
heat_new=0.08*heat*rnorm(length(t),1,0.2)
plot(t,heat_new,type="l")
heat_new=0.08*heat*rnorm(length(t),1,0.2)+0.001*t
plot(t,heat_new,type="l")
heat_new=0.08*heat*rnorm(length(t),1,0.2)+0.001*t^2
plot(t,heat_new,type="l")
heat_new=0.08*heat*rnorm(length(t),1,0.2)+0.0001*t^2
plot(t,heat_new,type="l")
heat_new=0.08*heat*rnorm(length(t),1,0.2)-0.0001*t^2
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
heat=sin(t*pi*2)
heat_new=0.08*heat*rnorm(length(t),1,0.2)-0.0001*t^2
heat_new=0.07*heat*rnorm(length(t),1,0.2)-0.0001*t^2
plot(t,heat_new,type="l")
t=seq(0.01,14,0.01)
heat=sin(t*pi*2-pi/2)
heat_new=0.07*heat*rnorm(length(t),1,0.2)-0.0001*t^2
plot(t,heat_new,type="l")
heat_new=0.06*heat*rnorm(length(t),1,0.2)-0.0001*t^2
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
t=seq(0.01,14,0.01)
heat=sin(t*pi*2-pi/2)
heat_new=0.03*heat*rnorm(length(t),1,0.2)-0.0001*t^2
plot(t,heat_new,type="l")
write.table(cbind(t,heat_new),file="102.bc")
library(bibliometrix) #See http://www.bibliometrix.org/
install.packages("bibliometrix")
install.packages(c("boot", "cluster", "foreign", "lattice", "MASS", "Matrix", "mgcv", "rpart", "survival"))
install.packages("bibliometrix")
library(bibliometrix) #See http://www.bibliometrix.org/
fname <- "./literature/based_on_infiltpaper.bib"
getwd()
setwd("~/Documents/projects/2017/infilt_paper/lit")
fname <- ".based_on_infiltpaper.bib"
name <- paste(strsplit(strsplit(fname,"/")[[1]][length(strsplit(fname,"/")[[1]])],".bib"))
D <- readFiles(fname)
M <- convert2df(D, dbsource = "isi", format = "bibtex")
results <- biblioAnalysis(M, sep = ";")
S=summary(object = results, k = 30, pause = T)
S$MostCitedPapers
# Almost identical to lit_sample.bib on KVHEM/RUserGroup/2018/lit_review
# Added automatic naming of txt file for grep
# Collapses name when more than one key word is used for grep
# grep with more than one search word uses OR logic
#devtools::install_github("massimoaria/bibliometrix")
library(bibliometrix) #See http://www.bibliometrix.org/
fname <- ".based_on_infiltpaper.bib"
name <- paste(strsplit(strsplit(fname,"/")[[1]][length(strsplit(fname,"/")[[1]])],".bib"))
D <- readFiles(fname)
M <- convert2df(D, dbsource = "isi", format = "bibtex")
results <- biblioAnalysis(M, sep = ";")
S=summary(object = results, k = 30, pause = T)
S$MostCitedPapers
CR <- citations(M, field = "author", sep = ".  ")
CR$Cited[1:20]
DF <- dominance(results, k = 20)
DF
authors=gsub(","," ", names(results$Authors)[1:30])
indices <- Hindex(M, authors, sep = ";",years=50)
indices$H
A <- cocMatrix(M, Field = "SO", sep = ";")
sort(Matrix::colSums(A), decreasing = TRUE)[1:5]
#Bibliographic coupling analyses the citing documents:
#Current research front and connection between groups
NetMatrix <- biblioNetwork(M, analysis = "coupling", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 50, Title = "Authors' Coupling", type = "kamada", labelsize = 0.6, size=FALSE,remove.multiple=TRUE)
#Co-citation analyses the cited documents:
#Mapping older papers and detect schools of thought/shift in abstractsdigms
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "references", sep = ".  ")
net=networkPlot(NetMatrix, n = 30, halo=F,
Title = "Co-Citation Network", type = "kamada",
size=T, labelsize = 0.8, remove.multiple=T)
#Scientific colalboration/co-authorship
NetMatrix <- biblioNetwork(M, analysis = "collaboration", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 130, Title = "Authors' Collaboration",
type = "fruchterman", labelsize = 0.8,
size=FALSE,remove.multiple=TRUE)
#Keyword co-occurence
histResults <- histNetwork(M, n = 30, sep = ".  ")
net <- histPlot(histResults, size = FALSE)
#Find specific keywords in abstract
abstracts <- M$AB
abstracts <- gsub("   ", " ", abstracts)
names(abstracts) <- paste(gsub("([A-Za-z]+).*", "\\1", M$AU), M$PY, "|", M$JI,"|", M$TC)
toMatch <- c("18","EUROPE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste("literature/",name,"_",toMatch,".txt",sep=""))
fname <- "based_on_infiltpaper.bib"
name <- paste(strsplit(strsplit(fname,"/")[[1]][length(strsplit(fname,"/")[[1]])],".bib"))
D <- readFiles(fname)
# Almost identical to lit_sample.bib on KVHEM/RUserGroup/2018/lit_review
# Added automatic naming of txt file for grep
# Collapses name when more than one key word is used for grep
# grep with more than one search word uses OR logic
#devtools::install_github("massimoaria/bibliometrix")
library(bibliometrix) #See http://www.bibliometrix.org/
fname <- "based_on_infiltpaper.bib"
name <- paste(strsplit(strsplit(fname,"/")[[1]][length(strsplit(fname,"/")[[1]])],".bib"))
D <- readFiles(fname)
M <- convert2df(D, dbsource = "isi", format = "bibtex")
results <- biblioAnalysis(M, sep = ";")
S=summary(object = results, k = 30, pause = T)
authors=gsub(","," ", names(results$Authors)[1:30])
indices <- Hindex(M, authors, sep = ";",years=50)
indices$H
A <- cocMatrix(M, Field = "SO", sep = ";")
sort(Matrix::colSums(A), decreasing = TRUE)[1:5]
#Bibliographic coupling analyses the citing documents:
#Current research front and connection between groups
NetMatrix <- biblioNetwork(M, analysis = "coupling", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 50, Title = "Authors' Coupling", type = "kamada", labelsize = 0.6, size=FALSE,remove.multiple=TRUE)
#Co-citation analyses the cited documents:
#Mapping older papers and detect schools of thought/shift in abstractsdigms
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "references", sep = ".  ")
net=networkPlot(NetMatrix, n = 30, halo=F,
Title = "Co-Citation Network", type = "kamada",
size=T, labelsize = 0.8, remove.multiple=T)
#Scientific colalboration/co-authorship
NetMatrix <- biblioNetwork(M, analysis = "collaboration", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 130, Title = "Authors' Collaboration",
type = "fruchterman", labelsize = 0.8,
size=FALSE,remove.multiple=TRUE)
#Keyword co-occurence
histResults <- histNetwork(M, n = 30, sep = ".  ")
net <- histPlot(histResults, size = FALSE)
#Find specific keywords in abstract
abstracts <- M$AB
abstracts <- gsub("   ", " ", abstracts)
names(abstracts) <- paste(gsub("([A-Za-z]+).*", "\\1", M$AU), M$PY, "|", M$JI,"|", M$TC)
toMatch <- c("18","EUROPE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste("literature/",name,"_",toMatch,".txt",sep=""))
toMatch
toMatch <- c("RICHARD")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste(yname,"_",toMatch,".txt",sep=""))
write(matched_sentences, file = paste(name,"_",toMatch,".txt",sep=""))
toMatch <- c("UNIQUE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste(name,"_",toMatch,".txt",sep=""))
toMatch <- c("INVERSE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste(name,"_",toMatch,".txt",sep=""))
toMatch <- c("RICHARD","INVERSE","UNIQUE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste(name,"_",toMatch,".txt",sep=""))
# Almost identical to lit_sample.bib on KVHEM/RUserGroup/2018/lit_review
# Added automatic naming of txt file for grep
# Collapses name when more than one key word is used for grep
# grep with more than one search word uses OR logic
#devtools::install_github("massimoaria/bibliometrix")
library(bibliometrix) #See http://www.bibliometrix.org/
fname <- "based_on_infiltpaper.bib"
name <- paste(strsplit(strsplit(fname,"/")[[1]][length(strsplit(fname,"/")[[1]])],".bib"))
D <- readFiles(fname)
M <- convert2df(D, dbsource = "isi", format = "bibtex")
results <- biblioAnalysis(M, sep = ";")
S=summary(object = results, k = 30, pause = T)
authors=gsub(","," ", names(results$Authors)[1:30])
indices <- Hindex(M, authors, sep = ";",years=50)
indices$H
A <- cocMatrix(M, Field = "SO", sep = ";")
sort(Matrix::colSums(A), decreasing = TRUE)[1:5]
#Bibliographic coupling analyses the citing documents:
#Current research front and connection between groups
NetMatrix <- biblioNetwork(M, analysis = "coupling", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 50, Title = "Authors' Coupling", type = "kamada", labelsize = 0.6, size=FALSE,remove.multiple=TRUE)
#Co-citation analyses the cited documents:
#Mapping older papers and detect schools of thought/shift in abstractsdigms
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "references", sep = ".  ")
net=networkPlot(NetMatrix, n = 30, halo=F,
Title = "Co-Citation Network", type = "kamada",
size=T, labelsize = 0.8, remove.multiple=T)
#Scientific colalboration/co-authorship
NetMatrix <- biblioNetwork(M, analysis = "collaboration", network = "authors", sep = ";")
S <- normalizeSimilarity(NetMatrix, type="jaccard")
net <- networkPlot(S, n = 130, Title = "Authors' Collaboration",
type = "fruchterman", labelsize = 0.8,
size=FALSE,remove.multiple=TRUE)
#Keyword co-occurence
histResults <- histNetwork(M, n = 30, sep = ".  ")
net <- histPlot(histResults, size = FALSE)
#Find specific keywords in abstract
abstracts <- M$AB
abstracts <- gsub("   ", " ", abstracts)
names(abstracts) <- paste(gsub("([A-Za-z]+).*", "\\1", M$AU), M$PY, "|", M$JI,"|", M$TC)
toMatch <- c("RICHARD","INVERSE","UNIQUE")
matched_sentences <- tolower(unlist(strsplit(abstracts, split = "\\."))[grep(paste(toMatch, collapse="|"), unlist(strsplit(abstracts, split = "\\.")))])
matched_sentences <- paste0(matched_sentences, " [", substr(names(matched_sentences), 1, nchar(names(matched_sentences))-1), "]")
toMatch <- paste(toMatch,collapse='')
write(matched_sentences, file = paste(name,"_",toMatch,".txt",sep=""))
