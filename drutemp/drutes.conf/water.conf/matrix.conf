#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#--------------------d r u t e s . c o n f / w a t e r . c o n f / m a t r i x . c o n f ---------
#-------------------------------------------------------------------------------------------------
#
#


#---how-to use constitutive relations? [integer]
# 0 - direct evaluation (not recommended, extremely resources consuming due to complicated exponential functions)
# 1 - function values are precalculated in program initialization and values between are linearly approximated

0

#length of interval for precaculating the constitutive functions (!) (starting at zero)
700.0 

#discretization step for constitutive function precalculation
0.15



# amount of soil layers [integer]
1


#van genuchten porous medium parameters, if 1D specify the layer elevation                                          	               
#      alfa [L-1]  |    n   |    m       | theta_r    | theta_s  |   specific storage    |
#-----------------------------------------1st layer------------------------------------------------- 
#     silty clay

         0.067     1.388    .27953890489    0.0         0.581       0
# 0.00012991              1.5264   .34486373165618448638   0.0   0.6      0.0
#      3.3963e-2       1.14   0.12281   0.020148         0.84       0.0
#     0.015          2       0.5        0.0         0.2         0.1 
#   0.015          2       0.5        0.0         0.45         0.1 

#anisothprophy description
# HINT: check number of records of anisothropy description in water.conf/matrix.conf!!
#       for 3D problem you must specify exactly Kxx, Kyy and Kzz values.
#       Obviously for 2D problem there must be exactly only Kxx and Kzz value, analogicaly for 1D problem
#        for 2D problem supply only 1 angle, for 3D problem supply 2 angles, and for 1D problem the angle value defines the angle between the VERTICAL and the flow trajectory (carefull some other 
#        softwares consider HORIZONTAL!!
#angle [degrees]  | K_11   |  K_22   | K_33
#-----------------------------------------------
  0.0             4.5
#     0.0                 10    
#   0.0                20.0    
# 22.1                  1.0       0.2     0.3

# initial condition specified for each layer, use of RCZA method, if 1D specify the layer elevation
# number of records must be equal to number of layers

# sink(-) /source (+) term per layer
0.0
#   0.0
#  0.0


# init. cond [real] | type of init. cond (hpres, H_tot, theta) |  RCZA method [y/n] [char.] |  RCZA method val. [real]   
##------------------------------------------------------------------------------

   0.0                       hpres                        n		             1e-5
#     10.0                      hpres                             n                       1e-2
# 
#     20.0                      hpres                             n                       1e-2

##################################################################
#################### bc description ##############################
##################################################################

# number of boundaries (for 1D problem obviously not more then 2)
2
#list boundaries

# ID starts at 100 (for 1D problem 101 = bottom boundary, 102 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# -1 - Dirichlet boundary, the pressure is equal to vertical distance from the defined value
# 2 - Neumann boundary (e.g. rain)
# 3 - Free Drainage
# 4 - Seepage Face

# boundary ID       boundary type       use rain.dat [y/n]   value          
#----------------------------------------------------------------------------------------------------------------------------
101                       1                   n                0.0    
102                       2                   n                1.3196480938
# 103                       1                   y                   -1.0         
# 104                     2                   n                   0         
# 103                     1                   n                   -20.0           





